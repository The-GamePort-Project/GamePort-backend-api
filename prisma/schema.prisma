generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  //directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  firstname String?
  lastname  String?
  password  String?
  provider  String   @default("local")
  googleId  String?  @unique
  twoFactorSecret String?  
  isTwoFactorEnabled Boolean @default(false)
  role      Role     @default(USER)
  reviews   Review[] @relation("UserReviews")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id      String @id @default(uuid())
  comment String
  recommend Boolean
  rating  Int
  userId  String
  gameId  String

  user      User     @relation("UserReviews", fields: [userId], references: [id])
  game      Game     @relation(fields: [gameId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
   @@unique([userId, gameId])
}

model Game {
  id            String   @id @default(uuid())
  title         String
  slug          String   @unique
  description   String?
  developer     String
  publisher     String
  releaseDate   DateTime
  coverImageUrl String?
  trailerUrl    String?
  rating        Float   @default(0.0)

  genres    Genre[]     @relation("GameGenres")
  platforms Platform[]  @relation("GamePlatforms")
  reviews   Review[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  GameMedia GameMedia[]
}

model Genre {
  id    String @id @default(uuid())
  name  String @unique
  games Game[] @relation("GameGenres")
}

model Platform {
  id    String @id @default(uuid())
  name  String @unique
  games Game[] @relation("GamePlatforms")
}

model GameMedia {
  id     String    @id @default(uuid())
  type   MediaType
  url    String
  gameId String
  game   Game      @relation(fields: [gameId], references: [id])
}

enum MediaType {
  IMAGE
  TRAILER
  SCREENSHOT
}

enum Role {
  ADMIN
  USER
}
